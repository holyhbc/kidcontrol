name: Build luci-app-kidcontrol for 360T7 (mt7981)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # ÂÖÅËÆ∏ÊâãÂä®Ëß¶ÂèëÊûÑÂª∫

env:
  PACKAGE_NAME: luci-app-kidcontrol
  OPENWRT_VERSION: "24.10.1"
  TARGET: "mediatek/mt7981"
  # 24.10ÁâàÊú¨ÈÄöÂ∏∏ÊúâÊõ¥ÁªÜÂàÜÁöÑsubtargetÔºå‰ΩÜSDKÂèØËÉΩËøòÊòØ‰ª•mt7981‰∏∫‰∏ª
  SDK_SUBDIR: "mt7981" 

jobs:
  build:
    runs-on: ubuntu-latest
    # ‰ΩøÁî®ËæÉÊñ∞ÁöÑubuntuÁâàÊú¨‰ª•Á°Æ‰øùÂÖºÂÆπÊÄß

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip zlib1g-dev file wget curl

    - name: Determine SDK URL
      run: |
        # ÊûÑÂª∫24.10.1ÁâàÊú¨MT7981 SDKÁöÑ‰∏ãËΩΩÈìæÊé•
        SDK_FILENAME="openwrt-sdk-24.10.1-mediatek-mt7981_gcc-14.2.0_musl.Linux-x86_64.tar.xz"
        SDK_URL="https://downloads.openwrt.org/releases/24.10.1/targets/mediatek/mt7981/$SDK_FILENAME"
        echo "SDK_URL=$SDK_URL" >> $GITHUB_ENV
        echo "SDK_FILENAME=$SDK_FILENAME" >> $GITHUB_ENV
        echo "Building for 360T7 (MT7981) with OpenWrt ${{ env.OPENWRT_VERSION }}"

    - name: Download and Extract OpenWrt SDK
      run: |
        cd $GITHUB_WORKSPACE
        echo "Downloading SDK from: ${{ env.SDK_URL }}"
        wget --progress=dot:giga ${{ env.SDK_URL }} -O sdk.tar.xz
        mkdir -p openwrt-sdk
        tar -xf sdk.tar.xz -C openwrt-sdk --strip-components=1
        rm -f sdk.tar.xz
        ls -la openwrt-sdk/

    - name: Prepare Package in SDK
      run: |
        cd $GITHUB_WORKSPACE/openwrt-sdk
        # Â∞ÜÊï¥‰∏™È°πÁõÆÂ§çÂà∂Âà∞SDKÁöÑpackageÁõÆÂΩï‰∏ã
        mkdir -p package/${{ env.PACKAGE_NAME }}
        cp -r $GITHUB_WORKSPACE/* package/${{ env.PACKAGE_NAME }}/
        # Ê∏ÖÁêÜ‰∏çÂøÖË¶ÅÁöÑÊñá‰ª∂
        rm -rf package/${{ env.PACKAGE_NAME }}/openwrt-sdk 2>/dev/null || true

    - name: Update Feeds
      run: |
        cd $GITHUB_WORKSPACE/openwrt-sdk
        ./scripts/feeds update -a

    - name: Configure SDK
      run: |
        cd $GITHUB_WORKSPACE/openwrt-sdk
        # ÁîüÊàêÈªòËÆ§ÈÖçÁΩÆ
        make defconfig
        # Á°Æ‰øùÊàë‰ª¨ÁöÑÂåÖË¢´ÁºñËØë‰∏∫Ê®°Âùó
        echo "CONFIG_PACKAGE_${{ env.PACKAGE_NAME }}=m" >> .config
        # Â∫îÁî®ÈÖçÁΩÆ
        make defconfig
        echo "Current configuration for our package:"
        grep "CONFIG_PACKAGE_${{ env.PACKAGE_NAME }}" .config || echo "Package not in config yet"

    - name: Compile the Package
      run: |
        cd $GITHUB_WORKSPACE/openwrt-sdk
        # ÁºñËØëÁâπÂÆöÂåÖ - ‰ΩøÁî®ËæÉÁÆÄÊ¥ÅÁöÑËæìÂá∫
        make package/${{ env.PACKAGE_NAME }}/compile -j$(nproc)
        # Â¶ÇÊûú‰∏äÈù¢Â§±Ë¥•ÔºåÂèØ‰ª•Â∞ùËØïËØ¶ÁªÜÊ®°ÂºèÊéíÊü•ÈóÆÈ¢ò
        # make package/${{ env.PACKAGE_NAME }}/compile V=s

    - name: Find Compiled Package
      run: |
        cd $GITHUB_WORKSPACE/openwrt-sdk
        # Êü•ÊâæÁîüÊàêÁöÑipkÊñá‰ª∂
        IPK_PATH=$(find bin -name "*${{ env.PACKAGE_NAME }}*.ipk" | head -n 1)
        if [ -f "$IPK_PATH" ]; then
          echo "Found IPK: $IPK_PATH"
          echo "PACKAGE_PATH=$IPK_PATH" >> $GITHUB_ENV
          echo "IPK_FILENAME=$(basename $IPK_PATH)" >> $GITHUB_ENV
          # Â§çÂà∂Âà∞Â∑•‰ΩúÂå∫Ê†πÁõÆÂΩïÊñπ‰æø‰∏ä‰º†
          mkdir -p $GITHUB_WORKSPACE/output
          cp $IPK_PATH $GITHUB_WORKSPACE/output/
        else
          echo "Error: IPK file not found!"
          echo "Checking build directories..."
          find . -name "*.ipk" | head -10
          exit 1
        fi

    - name: Upload IPK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGE_NAME }}-${{ env.OPENWRT_VERSION }}-mt7981
        path: $GITHUB_WORKSPACE/output/*.ipk

    - name: Show Build Success
      run: |
        echo "=========================================="
        echo "Build successful! üéâ"
        echo "Package: ${{ env.PACKAGE_NAME }}"
        echo "OpenWrt: ${{ env.OPENWRT_VERSION }}"
        echo "Target: ${{ env.TARGET }}"
        echo "IPK: ${{ env.IPK_FILENAME }}"
        echo "=========================================="
