name: Build luci-app-kidcontrol for 360T7

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

env:
  PACKAGE_NAME: luci-app-kidcontrol
  TARGET_ARCH: "aarch64_cortex-a53"

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 60

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Debug project structure
      run: |
        echo "=== Project Structure ==="
        echo "Current directory: $(pwd)"
        ls -la
        echo ""
        echo "Looking for Makefile:"
        find . -name "Makefile" -type f

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3 python3-pip rsync unzip zlib1g-dev file wget curl

    - name: Download OpenWrt SDK for 360T7
      run: |
        SDK_URL="https://downloads.openwrt.org/releases/23.05.3/targets/mediatek/filogic/openwrt-sdk-23.05.3-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
        echo "Downloading SDK: $SDK_URL"
        
        if ! wget --timeout=30 --tries=3 "$SDK_URL" -O sdk.tar.xz; then
          echo "Trying mirror..."
          MIRROR_URL="https://mirror-03.infra.openwrt.org/releases/23.05.3/targets/mediatek/filogic/openwrt-sdk-23.05.3-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
          wget "$MIRROR_URL" -O sdk.tar.xz
        fi
        
        tar -xf sdk.tar.xz
        SDK_DIR=$(tar -tf sdk.tar.xz | head -1 | cut -f1 -d"/")
        mv "$SDK_DIR" openwrt-sdk
        rm -f sdk.tar.xz
        echo "SDK ready"

    - name: Copy specific package files
      run: |
        echo "=== Copying Specific Files ==="
        echo "Current directory contents:"
        ls -la
        
        mkdir -p openwrt-sdk/package/network/services/${{ env.PACKAGE_NAME }}
        
        echo "Copying individual files and directories..."
        
        if [ -f "Makefile" ]; then
          cp Makefile openwrt-sdk/package/network/services/${{ env.PACKAGE_NAME }}/
          echo "‚úÖ Copied Makefile"
        fi
        
        for file in *.mk *.md *.txt LICENSE; do
          if [ -f "$file" ]; then
            cp "$file" openwrt-sdk/package/network/services/${{ env.PACKAGE_NAME }}/
            echo "‚úÖ Copied $file"
          fi
        done
        
        for dir in src root test luasrc; do
          if [ -d "$dir" ]; then
            cp -r "$dir" openwrt-sdk/package/network/services/${{ env.PACKAGE_NAME }}/
            echo "‚úÖ Copied directory: $dir"
          fi
        done
        
        echo "Target directory contents:"
        ls -la openwrt-sdk/package/network/services/${{ env.PACKAGE_NAME }}/

    - name: Verify Makefile exists
      run: |
        cd openwrt-sdk/package/network/services/${{ env.PACKAGE_NAME }}
        echo "Checking for Makefile in: $(pwd)"
        ls -la
        
        if [ -f "Makefile" ]; then
          echo "‚úÖ Makefile found"
          echo "=== Makefile Content ==="
          cat Makefile
        else
          echo "‚ùå Makefile not found! Creating a basic one..."
          
          # ‰ΩøÁî®Â§ö‰∏™echoÂëΩ‰ª§‰ª£Êõøhere-document
          echo "include \$(TOPDIR)/rules.mk" > Makefile
          echo "LUCI_TITLE:=LuCI support for Kid Control" >> Makefile
          echo "LUCI_DEPENDS:=+nftables" >> Makefile
          echo "PKG_VERSION:=1.0" >> Makefile
          echo "PKG_RELEASE:=1" >> Makefile
          echo "include \$(TOPDIR)/feeds/luci/luci.mk" >> Makefile
          echo "# call BuildPackage - OpenWrt buildroot signature" >> Makefile
          
          echo "‚úÖ Basic Makefile created"
          cat Makefile
        fi

    - name: Update feeds and configure
      run: |
        cd openwrt-sdk
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
        echo "CONFIG_PACKAGE_${{ env.PACKAGE_NAME }}=m" >> .config
        make defconfig

    - name: Compile package
      run: |
        cd openwrt-sdk
        echo "Compiling package..."
        make package/network/services/${{ env.PACKAGE_NAME }}/compile V=s -j1

    - name: Find and collect IPK
      run: |
        cd openwrt-sdk
        echo "Searching for IPK file..."
        
        IPK_FILE=$(find . -name "*${{ env.PACKAGE_NAME }}*.ipk" | head -n 1)
        
        if [ -f "$IPK_FILE" ]; then
          echo "‚úÖ Found IPK: $IPK_FILE"
          mkdir -p ../output
          cp "$IPK_FILE" ../output/
        else
          echo "‚ùå IPK not found"
          find . -name "*.ipk" | head -10
          exit 1
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGE_NAME }}-360t7
        path: output/*.ipk

    - name: Show success message
      run: |
        echo "=========================================="
        echo "‚úÖ Build process completed!"
        echo "üì¶ Package: ${{ env.PACKAGE_NAME }}"
        echo "üéØ For: 360T7 (MT7981)"
        echo "üìÅ Check artifacts for IPK file"
        echo "=========================================="
