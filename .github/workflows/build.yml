name: Build luci-app-kidcontrol

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PACKAGE_NAME: luci-app-kidcontrol
  OPENWRT_VERSION: "24.10.1"
  TARGET: "mediatek/filogic"
  SUBTARGET: "mt7981"

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 90

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        path: source-code  # 明确指定检出路径

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          clang \
          flex \
          bison \
          g++ \
          gawk \
          gcc-multilib \
          gettext \
          git \
          libncurses5-dev \
          libssl-dev \
          python3 \
          python3-pip \
          rsync \
          unzip \
          zlib1g-dev \
          file \
          wget \
          curl \
          subversion

    - name: Clone OpenWrt source
      run: |
        git clone https://github.com/openwrt/openwrt.git openwrt-source
        cd openwrt-source
        git checkout v${{ env.OPENWRT_VERSION }}

    - name: Debug directory structure
      run: |
        echo "Current workspace: $GITHUB_WORKSPACE"
        echo "Directory structure:"
        pwd
        ls -la
        echo "Source code directory:"
        ls -la source-code/ || echo "No source-code directory"

    - name: Find and copy package files
      run: |
        # 在检出目录中查找包文件
        cd $GITHUB_WORKSPACE
        
        # 查找Makefile文件
        MAKEFILE_PATH=$(find . -name "Makefile" -path "*/luci-app-kidcontrol/*" | head -n 1)
        
        if [ -n "$MAKEFILE_PATH" ]; then
          echo "✅ Found Makefile at: $MAKEFILE_PATH"
          # 提取包目录路径
          PACKAGE_DIR=$(dirname "$MAKEFILE_PATH")
          echo "Package directory: $PACKAGE_DIR"
          
          # 创建目标目录
          mkdir -p openwrt-source/package/network/services/${{ env.PACKAGE_NAME }}
          
          # 复制所有文件
          cp -r "$PACKAGE_DIR"/* openwrt-source/package/network/services/${{ env.PACKAGE_NAME }}/
          
          echo "✅ Files copied successfully"
        else
          echo "❌ Makefile not found in luci-app-kidcontrol directory!"
          echo "Searching for any Makefile:"
          find . -name "Makefile" | head -10
          echo "Trying alternative approach..."
          
          # 尝试直接复制整个source-code目录的内容
          if [ -d "source-code" ]; then
            mkdir -p openwrt-source/package/network/services/${{ env.PACKAGE_NAME }}
            cp -r source-code/* openwrt-source/package/network/services/${{ env.PACKAGE_NAME }}/
            echo "✅ Copied all files from source-code directory"
          else
            echo "❌ No source-code directory found!"
            exit 1
          fi
        fi
        
        echo "Target directory contents:"
        ls -la openwrt-source/package/network/services/${{ env.PACKAGE_NAME }}/

    - name: Verify Makefile exists
      run: |
        cd $GITHUB_WORKSPACE/openwrt-source/package/network/services/${{ env.PACKAGE_NAME }}
        if [ ! -f "Makefile" ]; then
          echo "❌ Error: Makefile not found in package directory!"
          echo "Current directory: $(pwd)"
          ls -la
          exit 1
        fi
        echo "✅ Makefile found and verified"
        echo "Makefile first few lines:"
        head -5 Makefile

    - name: Setup feeds and basic config
      run: |
        cd $GITHUB_WORKSPACE/openwrt-source
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
        # 基础配置
        echo "CONFIG_TARGET_mediatek=y" >> .config
        echo "CONFIG_TARGET_mediatek_filogic=y" >> .config
        echo "CONFIG_TARGET_mediatek_filogic_${{ env.SUBTARGET }}=y" >> .config
        echo "CONFIG_TARGET_mediatek_filogic_${{ env.SUBTARGET }}_360t7=y" >> .config
        echo "CONFIG_PACKAGE_luci=y" >> .config
        echo "CONFIG_PACKAGE_nftables=y" >> .config
        echo "CONFIG_PACKAGE_${{ env.PACKAGE_NAME }}=m" >> .config
        
        make defconfig

    - name: Download sources
      run: |
        cd $GITHUB_WORKSPACE/openwrt-source
        make download -j$(nproc)

    - name: Build only the required package
      run: |
        cd $GITHUB_WORKSPACE/openwrt-source
        echo "Compiling ${{ env.PACKAGE_NAME }} and dependencies..."
        
        # 只编译必要的工具链和依赖
        make tools/install -j$(nproc)
        make toolchain/install -j$(nproc)
        
        # 编译nftables依赖
        make package/nftables/compile -j$(nproc)
        
        # 编译LuCI基础
        make package/luci/compile -j$(nproc)
        
        # 编译我们的包
        make package/network/services/${{ env.PACKAGE_NAME }}/compile V=s -j$(nproc)

    - name: Find and collect IPK files
      run: |
        cd $GITHUB_WORKSPACE/openwrt-source
        echo "Searching for IPK files..."
        
        IPK_FILE=$(find bin -name "*${{ env.PACKAGE_NAME }}*.ipk" | head -n 1)
        
        if [ -z "$IPK_FILE" ]; then
          IPK_FILE=$(find bin/packages -name "*${{ env.PACKAGE_NAME }}*.ipk" | head -n 1)
        fi
        
        if [ -f "$IPK_FILE" ]; then
          echo "✅ Found: $IPK_FILE"
          mkdir -p $GITHUB_WORKSPACE/output
          cp "$IPK_FILE" $GITHUB_WORKSPACE/output/
        else
          echo "❌ IPK file not found"
          find . -name "*.ipk" | head -10
          exit 1
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGE_NAME }}-ipk
        path: output/*.ipk

    - name: Show success message
      run: |
        echo "=========================================="
        echo "✅ Build successful!"
        echo "📦 Package: ${{ env.PACKAGE_NAME }}"
        echo "🎯 For: 360T7 (MT7981)"
        echo "📁 IPK file available in artifacts"
        echo "=========================================="
