name: Build luci-app-kidcontrol

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PACKAGE_NAME: luci-app-kidcontrol

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 15

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Create IPK package
      run: |
        # 创建必要的目录结构
        mkdir -p ipk-build/CONTROL
        mkdir -p ipk-build/usr/lib/lua/luci
        
        # 创建control文件 - 最简单的方式
        echo "Package: ${{ env.PACKAGE_NAME }}" > ipk-build/CONTROL/control
        echo "Version: 1.0" >> ipk-build/CONTROL/control
        echo "Architecture: all" >> ipk-build/CONTROL/control  
        echo "Description: LuCI support for Kid Control" >> ipk-build/CONTROL/control
        
        # 复制文件（如果存在）
        if [ -d "luasrc" ]; then
          cp -r luasrc/* ipk-build/usr/lib/lua/luci/
        fi
        
        if [ -d "src" ]; then
          cp -r src/* ipk-build/usr/lib/lua/luci/
        fi
        
        if [ -d "root" ]; then
          cp -r root/* ipk-build/
        fi
        
        # 创建tar包（修正tar命令语法）
        cd ipk-build
        tar -czf ../control.tar.gz CONTROL/
        find . -path ./CONTROL -prune -o -print | tar -czf ../data.tar.gz -T -
        
        # 创建debian-binary
        echo "2.0" > ../debian-binary
        
        # 创建IPK
        cd ..
        ar r ${PACKAGE_NAME}.ipk debian-binary control.tar.gz data.tar.gz
        
        # 创建输出目录
        mkdir -p output
        cp ${PACKAGE_NAME}.ipk output/
        
        echo "✅ IPK created successfully!"
        ls -la output/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PACKAGE_NAME }}-ipk
        path: output/*.ipk

    - name: Success message
      run: |
        echo "=========================================="
        echo "🎉 SUCCESS! IPK package created."
        echo "📦 File: ${{ env.PACKAGE_NAME }}.ipk"
        echo "📁 Download from Artifacts section"
        echo "=========================================="
