name: Build luci-app-kidcontrol

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Create IPK package (correct method)
      run: |
        # 创建临时目录
        mkdir -p ipk-temp
        
        # 创建标准的IPK文件结构
        mkdir -p ipk-temp/CONTROL
        mkdir -p ipk-temp/usr/lib/lua/luci
        
        # 创建正确的control文件（必须字段）
        cat > ipk-temp/CONTROL/control << EOF
Package: luci-app-kidcontrol
Version: 1.0-1
Architecture: all
Maintainer: unknown
Description: LuCI support for Kid Control
EOF

        # 复制luasrc文件（如果存在）
        if [ -d "luci-app-kidcontrol/luasrc" ]; then
          cp -R luci-app-kidcontrol/luasrc/* ipk-temp/usr/lib/lua/luci/
        fi
        
        # 复制root文件（如果存在）
        if [ -d "luci-app-kidcontrol/root" ]; then
          cp -R luci-app-kidcontrol/root/* ipk-temp/
        fi
        
        # 创建data.tar.gz（正确方法）
        cd ipk-temp
        find . -type f -o -type l | grep -v './CONTROL/' | tar -czf ../data.tar.gz -T -
        
        # 创建control.tar.gz
        tar -czf ../control.tar.gz ./CONTROL/
        
        # 创建debian-binary
        echo "2.0" > ../debian-binary
        
        # 回到上级目录
        cd ..
        
        # 创建IPK包（正确顺序）
        ar rcs luci-app-kidcontrol.ipk debian-binary control.tar.gz data.tar.gz
        
        # 验证IPK格式
        echo "=== 验证IPK格式 ==="
        ar t luci-app-kidcontrol.ipk
        
        # 清理并创建输出
        mkdir -p output
        cp luci-app-kidcontrol.ipk output/
        rm -f debian-binary control.tar.gz data.tar.gz
        rm -rf ipk-temp
        
        echo "✅ IPK创建完成"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: luci-app-kidcontrol
        path: output/luci-app-kidcontrol.ipk
